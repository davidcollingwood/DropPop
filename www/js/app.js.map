{"version":3,"sources":["app/scripts/app.js","app/scripts/controllers/AppCtrl.js","app/scripts/controllers/ArticleCtrl.js","app/scripts/controllers/ArticleModalCtrl.js","app/scripts/controllers/FavouritesCtrl.js","app/scripts/controllers/FriendsCtrl.js","app/scripts/controllers/ProfileCtrl.js","app/scripts/controllers/ReportModalCtrl.js","app/scripts/controllers/SettingsCtrl.js","app/scripts/controllers/SettingsDetailCtrl.js","app/scripts/controllers/UserCtrl.js","app/scripts/filters/capitalise.js","app/scripts/filters/image-resolution.js","app/scripts/filters/language.js","app/scripts/models/Article.js","app/scripts/models/Profile.js","app/scripts/models/User.js","app/scripts/polyfills.js","app/scripts/routes.js","app/scripts/services/messages.js","app/scripts/services/settings.js","app/scripts/services/sounds.js","app/scripts/services/wikitude.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACltzhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"www/js/app.js","sourcesContent":["angular.module('droppop', [\n    'ionic',\n    'LocalStorageModule',\n    'partials',\n    'droppop.controllers',\n    'droppop.directives',\n    'droppop.services',\n    'droppop.filters',\n    'droppop.models'\n]);\n\nangular.module('droppop.controllers', []);\nangular.module('droppop.directives', []);\nangular.module('droppop.services', []);\nangular.module('droppop.filters', []);\nangular.module('droppop.models', []);\n\nangular.module('droppop')\n\n    .constant('WIKITUDE_WORLD', 'www/world/index.html')\n    \n    .constant('$ionicLoadingConfig', {\n        template: '<i class=\"ion-loading-c\"></i>'\n    })\n    \n    .run(function($ionicPlatform) {\n        $ionicPlatform.ready(function() {\n            \n        });\n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('AppCtrl', function($scope, $rootScope, $timeout, $ionicSideMenuDelegate, $ionicLoading, $ionicPopup, wikitude) {\n        \n        $scope.toggleMenu = function() {\n            $ionicSideMenuDelegate.toggleLeft();\n        };\n        \n        $rootScope.loadWorld = function() {\n            $ionicLoading.show();\n            \n            $timeout(function() {\n                wikitude.loadWorld().catch(function(err) {\n                    $ionicPopup.alert({\n                        title: 'Wikitude Plugin',\n                        template: err\n                    });\n                }).finally(function() {\n                    $ionicLoading.hide();\n                });\n            }, 500);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('ArticleCtrl', function($scope, $timeout, $ionicSideMenuDelegate, $ionicActionSheet, $sounds, user, article, profiles) {\n        \n        var body = angular.element(document.body);\n        \n        $scope.article = article;\n        $scope.profiles = [];\n        \n        for (var i = 0; i < Math.ceil(Math.random() * 4); i++) {\n            $scope.profiles.push(profiles[i]);\n        }\n        \n        $scope.getFavouriteClass = function() {\n            if (user.hasFavourited(article))\n                return 'ion-ios7-star';\n            return 'ion-ios7-star-outline';\n        };\n        \n        $scope.toggleFavourite = function() {\n            if (user.hasFavourited($scope.article))\n                $scope.removeFavourite();\n            else\n                $scope.addFavourite();\n        };\n        \n        $scope.addFavourite = function() {\n            user.addFavourite($scope.article);\n        };\n        \n        $scope.removeFavourite = function() {\n            $ionicActionSheet.show({\n                destructiveText: 'Remove Favourite',\n                cancelText: 'Cancel',\n                destructiveButtonClicked: function() {\n                    user.removeFavourite($scope.article);\n                    return true;\n                }\n            });\n        };\n        \n        $scope.drop = function() {\n            if (body.hasClass('bubble-in'))\n                return $scope.confirmDrop();\n            \n            $ionicSideMenuDelegate.canDragContent(false);\n            body.addClass('bubble-animation bubble-in');\n        };\n        \n        $scope.confirmDrop = function() {\n            body.addClass('bubble-confirm');\n            \n            $timeout(function() {\n                body.removeClass('bubble-confirm');\n                body.addClass('bubble-done');\n                \n                $sounds.pop.play();\n                \n                $timeout(function() {\n                    body.removeClass('bubble-done');\n                }, 500);\n                \n                $timeout($scope.cancelDrop, 1000);\n            }, 1500);\n        };\n        \n        $scope.cancelDrop = function() {\n            body.removeClass('bubble-in bubble-confirm bubble-done');\n            body.addClass('bubble-out');\n            \n            $timeout(function() {\n                body.removeClass('bubble-animation bubble-out');\n                $ionicSideMenuDelegate.canDragContent(true);\n            }, 1000);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('ArticleModalCtrl', function($scope) {\n        \n        $scope.cancel = function() {\n            $scope.modal.remove();\n        };\n        \n        $scope.save = function() {\n            $scope.modal.remove();\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('FavouritesCtrl', function($scope, user, Article) {\n        \n        $scope.favourites = user.getFavourites();\n        \n        $scope.getArticleId = function(favourite) {\n            return Article.getArticleId(favourite);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('FriendsCtrl', function($scope, $ionicNavBarDelegate, user, Profile) {\n        \n        $scope.is_searching = false;\n        $scope.friends_filter = '';\n        $scope.friends = user.friends;\n        \n        $scope.getProfileId = function(friend) {\n            return Profile.getProfileId(friend);\n        };\n        \n        $scope.search = function() {\n            $ionicNavBarDelegate.showBar(false);\n            $scope.is_searching = true;\n        };\n        \n        $scope.cancelSearch = function() {\n            $ionicNavBarDelegate.showBar(true);\n            $scope.is_searching = false;\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('ProfileCtrl', function($scope, $ionicActionSheet, user, profile, Article) {\n        \n        $scope.profile = profile;\n        \n        $scope.getFriendClass = function() {\n            if (user.hasFriend($scope.profile))\n                return 'ion-ios7-personadd';\n            return 'ion-ios7-personadd-outline';\n        };\n        \n        $scope.toggleFriend = function() {\n            if (user.hasFriend($scope.profile))\n                $scope.removeFriend();\n            else\n                $scope.addFriend();\n        };\n        \n        $scope.removeFriend = function() {\n            $ionicActionSheet.show({\n                destructiveText: 'Remove Friend',\n                cancelText: 'Cancel',\n                destructiveButtonClicked: function() {\n                    user.removeFriend($scope.profile);\n                    return true;\n                }\n            });\n        };\n        \n        $scope.addFriend = function() {\n            user.addFriend($scope.profile);\n        };\n        \n        $scope.getArticleId = function(article) {\n            return Article.getArticleId(article);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('ReportModalCtrl', function($scope, $timeout, $ionicPopup, $ionicLoading) {\n        \n        $scope.report = {\n            name: '',\n            email: '',\n            description: ''\n        };\n        \n        $scope.cancel = function() {\n            $scope.modal.remove();\n        };\n        \n        $scope.send = function() {\n            $ionicLoading.show();\n            \n            $timeout(function() {\n                $ionicLoading.hide();\n                \n                $ionicPopup.alert({\n                    title: 'Report Received',\n                    template: 'Your report has been received and will be investigated as soon as possible.'\n                }).then(function() {\n                    $scope.modal.remove();\n                });\n            }, 500);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('SettingsCtrl', function($scope, $ionicPopup, $ionicModal, settings) {\n        \n        $scope.settings = settings;\n        \n        $scope.logout = function() {\n            $ionicPopup.confirm({\n                title: 'Logout',\n                template: 'Are you sure you wish to logout?'\n            }).then(function(response) {\n                if (response) {\n                    // logout\n                }\n            });\n        };\n        \n        $scope.report = function() {\n            $ionicModal.fromTemplateUrl('/partials/report-modal.html', {\n                scope: $scope\n            }).then(function(modal) {\n                $scope.modal = modal;\n                $scope.modal.show();\n            })\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('SettingsDetailCtrl', function($scope, $timeout, $ionicNavBarDelegate, settings) {\n        \n        $scope.settings = settings;\n        \n        $scope.done = function() {\n            $timeout(function() {\n                $ionicNavBarDelegate.back();\n            }, 200);\n        };\n        \n    })\n\n;","angular.module('droppop.controllers')\n\n    .controller('UserCtrl', function($scope, user, Article) {\n        \n        $scope.is_me = true;\n        $scope.profile = user.getProfile();\n        \n        $scope.getFriendClass = function() {\n            return '';\n        };\n        \n        $scope.getArticleId = function(article) {\n            return Article.getArticleId(article);\n        };\n        \n    })\n\n;","angular.module('droppop.filters')\n\n    .filter('capitalise', function() {\n        return function(input) {\n            return input.charAt(0).toUpperCase() + input.slice(1);\n        };\n    })\n\n;","angular.module('droppop.filters')\n\n    .filter('imageResolution', function() {\n        \n        var input_map = {\n            low: 'Low',\n            good: 'Good',\n            high: 'High',\n            very_high: 'Very High'\n        };\n        \n        return function(input) {\n            \n            if (input in input_map)\n                return input_map[input];\n            return input;\n            \n        };\n        \n    })\n\n;","angular.module('droppop.filters')\n\n    .filter('language', function() {\n        \n        var input_map = {\n            eng: 'English'\n        };\n        \n        return function(input) {\n            \n            if (input in input_map)\n                return input_map[input];\n            return input;\n            \n        };\n        \n    })\n\n;","angular.module('droppop.models')\n\n    .service('$article', function() {\n        \n        var article = function(config) {\n            \n            config = config || {};\n            \n            this.title = config.title || '';\n            this.content = config.content || '';\n            this.description = config.description || '';\n            this.author = config.author || '';\n            \n        };\n        \n        return article;\n        \n    })\n    \n    .factory('Article', function($q, $http, $article) {\n        \n        var articles;\n        \n        var service = {\n            \n            /**\n             * Init service\n             *\n             * @return promise\n             */\n            init: function() {\n                if (angular.isDefined(articles))\n                    return $q.when(true);\n                return service.load();\n            },\n            \n            /**\n             * Get all articles\n             *\n             * @return promise\n             * @resolve array\n             */\n            all: function() {\n                return service.init().then(function() {\n                    return articles;\n                });\n            },\n            \n            /**\n             * Get article by ID\n             *\n             * @param int article_id\n             * @return promise\n             * @resolve article\n             */\n            get: function(article_id) {\n                return service.init().then(function() {\n                    return articles[article_id];\n                });\n            },\n            \n            /**\n             * Get article by config\n             *\n             * @param object config\n             * @return promise\n             * @resolve article\n             */\n            getByConfig: function(config) {\n                return service.init().then(function() {\n                    return service.get(service.getArticleId(config));\n                });\n            },\n            \n            /**\n             * Get article ID for article\n             *\n             * @param article\n             * @return int\n             */\n            getArticleId: function(article) {\n                return articles.findIndex(function(_article) {\n                    return article.title == _article.title;\n                });\n            },\n            \n            /**\n             * Create a new instance of $article\n             *\n             * @param object config\n             * @return article\n             */\n            create: function(config) {\n                return new $article(config);\n            },\n            \n            /**\n             * Add a new instance of $article\n             *\n             * @param object config\n             */\n            add: function(config) {\n                if (angular.isUndefined(articles))\n                    articles = [];\n                articles.push(service.create(config));\n            },\n            \n            /**\n             * Load articles\n             *\n             * @return promise\n             */\n            load: function() {\n                return $http.get('data/articles.json').success(function(data) {\n                    angular.forEach(data, service.add);\n                });\n            }\n            \n        };\n        \n        return service;\n        \n    })\n\n;","angular.module('droppop.models')\n    \n    .service('$profile', function(localStorageService, Article) {\n        \n        var profile = function(config) {\n            \n            config = config || {};\n            \n            this.name = {};\n            this.name.first = config.name.first || '';\n            this.name.last = config.name.last || '';\n            \n            this.gender = config.gender || '';\n            this.email = config.email || '';\n            \n            this.picture = {};\n            this.picture.thumbnail = config.picture.thumbnail || '';\n            this.picture.medium = config.picture.medium || '';\n            this.picture.large = config.picture.large || '';\n            \n            this.bubbles_popped = config.bubbles_popped || 0;\n            this.bubbles_dropped = config.bubbles_dropped || 0;\n            this.count_friends = config.count_friends || 0;\n            \n            this.recent_articles = [];\n            this.favourite_articles = [];\n            \n            angular.forEach(config.recent_articles, function(article) {\n                this.recent_articles.push(Article.create(article));\n            }, this);\n            \n            angular.forEach(config.favourite_articles, function(article) {\n                this.favourite_articles.push(Article.create(article));\n            }, this);\n            \n        };\n        \n        profile.prototype = {\n            \n            /**\n             * Get first name\n             *\n             * @return string\n             */\n            getFirstName: function() {\n                return this.name.first;\n            },\n            \n            /**\n             * Get last name\n             *\n             * @return string\n             */\n            getLastName: function() {\n                return this.name.last;\n            },\n            \n            /**\n             * Get full name\n             *\n             * @return string\n             */\n            getName: function() {\n                return this.getFirstName() + ' ' + this.getLastName();\n            },\n            \n            /**\n             * Get profile picture url\n             *\n             * @param string size\n             * @return string\n             */\n            getPicture: function(size) {\n                switch (size) {\n                    case 'small':\n                        return this.picture.thumbnail;\n                    case 'medium':\n                        return this.picture.medium;\n                    default:\n                        return this.picture.large;\n                }\n            },\n            \n            /**\n             * Get recently read articles\n             *\n             * @return array\n             */\n            getRecentArticles: function() {\n                return this.recent_articles;\n            },\n            \n            /**\n             * Get favourite articles\n             *\n             * @return array\n             */\n            getFavouriteArticles: function() {\n                return this.favourite_articles;\n            }\n            \n        };\n        \n        return profile;\n        \n    })\n    \n    .factory('Profile', function(localStorageService, $q, $http, $profile, Article) {\n        \n        var profiles;\n        \n        var service = {\n            \n            /**\n             * Init service\n             *\n             * @return promise\n             */\n            init: function() {\n                if (angular.isDefined(profiles))\n                    return $q.when(true);\n                return service.load();\n            },\n            \n            /**\n             * Get all profiles\n             *\n             * @return promise\n             * @resolve array\n             */\n            all: function() {\n                return service.init().then(function() {\n                    return profiles;\n                });\n            },\n            \n            /**\n             * Get profile by ID\n             *\n             * @param profile_id\n             * @return promise\n             * @resolve profile\n             */\n            get: function(profile_id) {\n                return service.init().then(function() {\n                    return profiles[profile_id];\n                });\n            },\n            \n            /**\n             * Get profile by config\n             *\n             * @param object config\n             * @return promise\n             * @resolve profile\n             */\n            getByConfig: function(config) {\n                service.init().then(function() {\n                    return service.get(service.getProfileId(config));\n                });\n            },\n            \n            /**\n             * Get profile ID for profile\n             *\n             * @param profile\n             * @return int\n             */\n            getProfileId: function(profile) {\n                return profiles.findIndex(function(_profile) {\n                    return profile.email == _profile.email;\n                });\n            },\n            \n            /**\n             * Create a new instance of $profile\n             *\n             * @param object config\n             * @return profile\n             */\n            create: function(config) {\n                return new $profile(config);\n            },\n            \n            /**\n             * Add a new instance of $profile\n             *\n             * @param object config\n             */\n            add: function(config) {\n                if (angular.isUndefined(profiles))\n                    profiles = [];\n                profiles.push(service.create(config));\n            },\n            \n            /**\n             * Load profiles\n             *\n             * @return promise\n             */\n            load: function() {\n                return $http.get('data/profiles.json').then(function(response) {\n                    var promises = [];\n                    \n                    angular.forEach(response.data, function(config) {\n                        promises.push(service.loadProfile(config).then(function(config) {\n                            service.add(config);\n                        }));\n                    });\n                    \n                    return $q.all(promises);\n                });\n            },\n            \n            /**\n             * Load profile from config\n             *\n             * @param object config\n             * @return promise\n             */\n            loadProfile: function(config) {\n                return service.generateData().then(function(data) {\n                    config.recent_articles = data.recent_articles;\n                    config.favourite_articles = data.favourite_articles;\n                    config.bubbles_popped = data.bubbles_popped;\n                    config.bubbles_dropped = data.bubbles_dropped;\n                    config.count_friends = data.count_friends;\n                    \n                    return config;\n                });\n            },\n            \n            /**\n             * Generate articles config\n             *\n             * @return object\n             */\n            generateData: function() {\n                return $q.all({\n                    recent_articles: service.generateArticles(),\n                    favourite_articles: service.generateArticles(),\n                    bubbles_popped: service.generateBubblesPopped(),\n                    bubbles_dropped: service.generateBubblesDropped(),\n                    count_friends: service.generateCountFriends()\n                });\n            },\n            \n            generateArticles: function() {\n                return $q.all([\n                    service.generateArticle(),\n                    service.generateArticle(),\n                    service.generateArticle(),\n                    service.generateArticle()\n                ]);\n            },\n            \n            generateArticle: function() {\n                return Article.get(Math.round(Math.random() * 10));\n            },\n            \n            generateBubblesPopped: function() {\n                return $q.when(Math.floor(Math.random() * 500 + 100));\n            },\n            \n            generateBubblesDropped: function() {\n                return $q.when(Math.floor(Math.random() * 100 + 50));\n            },\n            \n            generateCountFriends: function() {\n                return $q.when(Math.floor(Math.random() * 50));\n            }\n            \n        };\n        \n        return service;\n        \n    })\n\n;","angular.module('droppop.models')\n    \n    .service('$user', function(localStorageService, Profile, Article) {\n        \n        var favourites = [];\n        \n        var user = function(config) {\n            \n            config = config || {};\n            \n            this.profile = Profile.create(config.profile);\n            this.friends = [];\n            this.favourites = [];\n            \n            angular.forEach(config.friends, function(profile) {\n                this.friends.push(Profile.create(profile));\n            }, this);\n            \n            angular.forEach(config.favourites, function(favourite) {\n                this.favourites.push(Article.create(favourite));\n            }, this);\n            \n            this.save();\n            \n        };\n        \n        user.prototype = {\n            \n            /**\n             * Get user's profile\n             *\n             * @return profile\n             */\n            getProfile: function() {\n                return this.profile;\n            },\n            \n            /**\n             * Get friend by ID\n             *\n             * @param int friend_id\n             * @return profile\n             */\n            getFriend: function(friend_id) {\n                return this.friends[friend_id];\n            },\n            \n            /**\n             * Get friend ID\n             *\n             * @param profile friend\n             * @return int\n             */\n            getFriendId: function(friend) {\n                return this.friends.findIndex(function(_friend) {\n                    return friend.email == _friend.email;\n                });\n            },\n            \n            /**\n             * Add friend\n             *\n             * @param profile\n             */\n            addFriend: function(profile) {\n                this.friends.push(profile);\n                this.save();\n            },\n            \n            /**\n             * Remove friend\n             *\n             * @param profile\n             */\n            removeFriend: function(profile) {\n                this.friends.splice(this.getFriendId(profile), 1);\n                this.save();\n            },\n            \n            /**\n             * Check whether user has friend\n             *\n             * @param profile\n             * @return bool\n             */\n            hasFriend: function(profile) {\n                return this.friends.some(function(friend) {\n                    return profile.email == friend.email;\n                });\n            },\n            \n            /**\n             * Get articles that the user has marked as favourite\n             *\n             * @return array\n             */\n            getFavourites: function() {\n                return this.favourites;\n            },\n            \n            /**\n             * Get article that the user has marked as favourite by ID\n             *\n             * @param int favourite_id\n             * @return article\n             */\n            getFavourite: function(favourite_id) {\n                return this.favourites[favourite_id];\n            },\n            \n            /**\n             * Get the ID for an article that the user has marked as favourite\n             *\n             * @param article\n             * @return int\n             */\n            getFavouriteId: function(article) {\n                return this.favourites.findIndex(function(favourite) {\n                    return favourite.title == article.title;\n                });\n            },\n            \n            /**\n             * Check if an article has been marked as favourite\n             *\n             * @param article\n             * @return bool\n             */\n            hasFavourited: function(article) {\n                return this.favourites.some(function(favourite) {\n                    return favourite.title == article.title;\n                });\n            },\n            \n            /**\n             * Mark article as favourite\n             *\n             * @param article\n             */\n            addFavourite: function(article) {\n                this.favourites.push(article);\n                this.save();\n            },\n            \n            /**\n             * Unmark article as favourite\n             *\n             * @param article\n             */\n            removeFavourite: function(article) {\n                this.favourites.splice(this.getFavouriteId(article), 1);\n                this.save();\n            },\n            \n            /**\n             * Save user instance to local storage\n             */\n            save: function() {\n                localStorageService.set('user', this);\n            }\n            \n        };\n        \n        return user;\n        \n    })\n    \n    .factory('User', function(localStorageService, $q, $http, $user, Profile, Article) {\n        \n        var user;\n        \n        var service = {\n            \n            /**\n             * Init service\n             *\n             * @return promise\n             */\n            init: function() {\n                if (angular.isDefined(user))\n                    return $q.when(true);\n                return service.load();\n            },\n            \n            /**\n             * Get the current instance OR create a new instance of $user\n             *\n             * @return promise\n             * @resolve user\n             */\n            get: function() {\n                return service.init().then(function() {\n                    return user;\n                });\n            },\n            \n            /**\n             * Create a new instance of $user\n             *\n             * @param object config\n             */\n            create: function(config) {\n                user = new $user(config);\n            },\n            \n            /**\n             * Load user config for new instance\n             *\n             * @return promise\n             */\n            load: function() {\n                var promise;\n                \n                if (localStorageService.get('user')) {\n                    promise = service.loadLocal();\n                } else {\n                    promise = service.loadDefault();\n                }\n                \n                return promise.then(function(config) {\n                    return service.create(config);\n                });\n            },\n            \n            /**\n             * Load user config from local resource\n             *\n             * @return promise\n             * @resolve object\n             */\n            loadLocal: function() {\n                return $q.when(localStorageService.get('user'));\n            },\n            \n            /**\n             * Load default values for new user\n             *\n             * @return promise\n             * @resolve object\n             */\n            loadDefault: function() {\n                return $q.all({\n                    profile: service.generateProfile(),\n                    friends: service.generateFriends(),\n                    favourites: service.generateFavourites()\n                });\n            },\n            \n            /**\n             * Generate profile\n             *\n             * @return promise\n             * @resolve profile\n             */\n            generateProfile: function() {\n                return Profile.loadProfile({\n                    name: {\n                        first: 'test',\n                        last: 'user'\n                    },\n                    gender: 'male',\n                    email: 'example@email.com',\n                    picture: {\n                        thumbnail: 'http://api.randomuser.me/portraits/thumb/men/15.jpg',\n                        medium: 'http://api.randomuser.me/portraits/med/men/15.jpg',\n                        large: 'http://api.randomuser.me/portraits/men/15.jpg'\n                    }\n                });\n            },\n            \n            /**\n             * Generate array of friends\n             *\n             * @return promise\n             * @resolve array\n             */\n            generateFriends: function() {\n                return $q.all([\n                    Profile.get(0),\n                    Profile.get(1),\n                    Profile.get(2)\n                ]);\n            },\n            \n            /**\n             * Generate array of favourite articles\n             \n             * @return promise\n             * @resolve array\n             */\n            generateFavourites: function() {\n                return $q.all([\n                    Article.get(0),\n                    Article.get(1),\n                    Article.get(2)\n                ]);\n            }\n        };\n        \n        return service;\n        \n    })\n\n;","/**\n * Array.prototype.findIndex()\n */\n\nif (!Array.prototype.findIndex) {\n  Array.prototype.findIndex = function(predicate) {\n    if (this == null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n}","angular.module('droppop')\n\n    .config(function($stateProvider, $urlRouterProvider) {\n    \n    \t$stateProvider\n    \t\t\n    \t\t.state('app', {\n    \t\t\turl: '/app',\n    \t\t\tabstract: true,\n    \t\t\ttemplateUrl: '/partials/app.html'\n    \t\t})\n    \t\t\n    \t\t.state('app.user', {\n        \t\turl: '/user',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/profile.html',\n                \t\tcontroller: 'UserCtrl',\n                \t\tresolve: {\n                    \t\tuser: function(User) {\n                        \t\treturn User.get();\n                    \t\t},\n                    \t\tarticles: function(Article) {\n                        \t\treturn Article.init();\n                    \t\t}\n                \t\t}\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.friends', {\n        \t\turl: '/friends',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/friends.html',\n                \t\tcontroller: 'FriendsCtrl',\n                \t\tresolve: {\n                    \t\tuser: function(User) {\n                        \t\treturn User.get();\n                    \t\t},\n                            profiles: function(Profile) {\n                                return Profile.init();\n                            }\n                \t\t}\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.profile', {\n        \t\turl: '/profiles/:profile_id',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/profile.html',\n                \t\tcontroller: 'ProfileCtrl',\n                \t\tresolve: {\n                    \t\tuser: function(User) {\n                        \t\treturn User.get();\n                    \t\t},\n                    \t\tprofile: function($stateParams, Profile) {\n                        \t\treturn Profile.get($stateParams.profile_id);\n                    \t\t}\n                \t\t}\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.article', {\n        \t\turl: '/articles/:article_id',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/article.html',\n                \t\tcontroller: 'ArticleCtrl',\n                \t\tresolve: {\n                    \t\tuser: function(User) {\n                        \t\treturn User.get();\n                    \t\t},\n                    \t\tarticle: function($stateParams, Article) {\n                        \t\treturn Article.get($stateParams.article_id);\n                    \t\t},\n                    \t\tprofiles: function(Profile) {\n                        \t\treturn Profile.all();\n                    \t\t}\n                \t\t}\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.favourites', {\n        \t\turl: '/favourites',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/favourites.html',\n                \t\tcontroller: 'FavouritesCtrl',\n                \t\tresolve: {\n                \t\t    user: function(User) {\n                    \t\t    return User.get();\n                \t\t    },\n                \t\t    articles: function(Article) {\n                    \t\t    return Article.init();\n                \t\t    }\n                \t\t}\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.settings', {\n        \t\turl: '/settings',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/settings.html',\n                \t\tcontroller: 'SettingsCtrl'\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.image-resolution', {\n        \t\turl: '/image-resolution',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/image-resolution.html',\n                \t\tcontroller: 'SettingsDetailCtrl'\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.language', {\n        \t\turl: '/language',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/language.html',\n                \t\tcontroller: 'SettingsDetailCtrl'\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.privacy', {\n        \t\turl: '/privacy',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/privacy.html'\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t\t.state('app.terms', {\n        \t\turl: '/terms',\n        \t\tviews: {\n            \t\t'app': {\n                \t\ttemplateUrl: '/partials/terms.html'\n            \t\t}\n        \t\t}\n    \t\t})\n    \t\t\n    \t;\n    \n    \t$urlRouterProvider.otherwise('/app/user');\n    \n    })\n\n;\n","angular.module('droppop.services')\n\n    .service('messages', function() {\n        \n        return {\n            \n            'error': {\n                'wikitude': {\n                    'device_not_supported': 'Your device is not supported by the Wikitude PhoneGap plugin.'\n                }\n            }\n            \n        };\n        \n    })\n\n;","angular.module('droppop.services')\n    \n    .factory('settings', function(localStorageService) {\n        \n        var service = {\n            sync: true,\n            notifications: true,\n            imageResolution: 'high',\n            language: 'eng'\n        };\n        \n        return service;\n        \n    })\n    \n;","angular.module('droppop.services')\n\n    .service('$sounds', function() {\n        \n        return {\n            pop: new Howl({ urls: ['sounds/pop.mp3'] })\n        };\n    })\n\n;","angular.module('droppop.services')\n    \n    .service('wikitude', function($window, $q, $ionicPlatform, WIKITUDE_WORLD, messages) {\n        \n        var wikitude_plugin;\n        \n        $ionicPlatform.ready(function() {\n            if (ionic.Platform.isWebView()) {\n                wikitude_plugin = $window.cordova.require(\"com.wikitude.phonegap.WikitudePlugin.WikitudePlugin\");\n                wikitude_plugin.setOnUrlInvokeCallback(service.onUrlInvoked);\n            }\n        });\n        \n        var service = {\n            \n            /**\n             * Check if the device supports the wikitude plugin\n             *\n             * @return promise\n             */\n            isSupported: function() {\n                var deferred = $q.defer();\n                \n                if (angular.isUndefined(wikitude_plugin)) {\n                    deferred.reject(messages.error.wikitude.device_not_supported);\n                    return deferred.promise;\n                }\n                \n                wikitude_plugin.isDeviceSupported(function() {\n                    deferred.resolve();\n                }, function() {\n                    console.log('device not supported');\n                    deferred.reject(messages.error.wikitude.device_not_supported);\n                });\n                \n                return deferred.promise;\n            },\n            \n            /**\n             * Load the AR world\n             */\n            loadWorld: function() {\n                return service.isSupported().then(function() {\n                    return wikitude_plugin.loadARchitectWorld(WIKITUDE_WORLD);\n                });\n            },\n            \n            /**\n             * Listen for any url changes in the AR world\n             */\n            onUrlInvoked: function(url) {\n                alert('url invoked: ' + url);\n                switch (url.substr(22)) {\n                    case 'close':\n                        alert('close wikitude');\n                        wikitude_plugin.close();\n                        break;\n                }\n            }\n            \n        };\n        \n        return service;\n        \n    })\n    \n;"]}